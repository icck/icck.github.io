var data = [
{
url: "https://icck.github.io/posts/2019-08-28/",
title: "Hugoに全文検索機能を追加する",
content: "[完成したもの まずは動いているものは以下になります。 https://icck.github.io/search/ 作業手順 手順を順に記載していきます。以下の記事を参考にさせていただきました。 http://rs.luminousspice.com/hugo-site-search/ https://snap.textgh.org/post/full-text-search-in-hugo/ インデックスファイルのテンプレート $ mkdir ./layouts/js $ touch ./layouts/js/single.html var data = [{{ range $index, $page := where .Site.Pages &amp;quot;Section&amp;quot; &amp;quot;posts&amp;quot;}} {{ if ne $index 0 }},{{ end }}{ url: &amp;quot;{{ $page.Permalink }}&amp;quot;, title: &amp;quot;{{ $page.Title }}&amp;quot;, content: &amp;quot;{{ .PlainWords }}&amp;quot; }{{ end }}] インデックスファイルを生成する空の投稿 $ hugo new pages/indexjs.md --- date: 2019-08-28T21:50:35&#43;09:00 type: &amp;quot;js&amp;quot; url: &amp;quot;index.js&amp;quot; --- 検索ページの作成 検索ページテンプレートの作成 $ mkdir ./layouts/search/ $ touch ./layouts/search/single.html {{ partial &amp;quot;head.html&amp;quot; . }} &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;サイト内全文検索&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;キーワードを入力するとリアルタイムで検索を始めます。 &amp;lt;li&amp;gt;入力欄フォーカス中は、エンターキー、矢印キーでベージ送りします。 &amp;lt;/ul&amp;gt; &amp;lt;script src=&amp;quot;https://icck.github.io/index.js&amp;quot; charset=&amp;quot;utf-8&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; dd{ margin:0; padding:0 0 1em 0.5em; width:90%; } dd span{ font-size:80%; color:#888; } dd b{ color:#666600; background-color:#ffffdd; font-weight:bold; border:1px solid #bbbb00; margin:0 2px 0 2px; padding:0 2px 0 2px; } #navi{ margin:0.5rem 0; line-height:2rem; } #navi span{ border-top:1px solid #d8d8d8; border-bottom:1px solid #d8d8d8; padding: 0.33rem 0.66rem; cursor:pointer; word-wrap:break-word; } #navi span.selected{ background: #D3EDF7; } #navi span:first-child{ border-left:1px solid #d8d8d8; border-top-left-radius: 0.4rem; border-bottom-left-radius: 0.4rem; } #navi span:last-child{ border-right:1px solid #d8d8d8; border-top-right-radius: 0.4rem; border-bottom-right-radius: 0.4rem; } #searchbox input{ font-size: 1; padding: .3em; margin-left:2em; margin-bottom: 1em; } @media (max-width: 15em) { #navi{ width:300px; } } &amp;lt;/style&amp;gt; &amp;lt;div id=&amp;quot;searchbox&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; id=&amp;quot;q&amp;quot; onkeyup=&amp;quot;do_find(this.value)&amp;quot; onkeydown=&amp;quot;key(event.keyCode)&amp;quot; autocomplete=&amp;quot;off&amp;quot; placeholder=&amp;quot;サイト内を検索&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;fa fa-search&amp;quot; aria-hidden=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span id=&amp;quot;stat&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;div id=&amp;quot;navi&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div id=&amp;quot;result&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; window.onload=function(){ gid(&amp;quot;q&amp;quot;).focus(); } { $_ = String.prototype; $_.mReplace = function(pat,flag){ var temp = this; if(!flag){flag=&amp;quot;&amp;quot;} for(var i in pat){ var re = new RegExp(i,flag); temp = temp.replace(re,pat[i]) } return temp; }; } { $_ = Date.prototype; $_.format = &amp;quot;yyyy-mm-dd HH:MM:SS&amp;quot;; $_.formatTime = function(format){ var yy; var o = { yyyy : ((yy = this.getYear()) &amp;lt; 2000)? yy&#43;1900 : yy, mm : this.getMonth() &#43; 1, dd : this.getDate(), HH : this.getHours(), MM : this.getMinutes(), SS : this.getSeconds() } for(var i in o){ if (o[i] &amp;lt; 10) o[i] = &amp;quot;0&amp;quot; &#43; o[i]; } return (format) ? format.mReplace(o) : this.format.mReplace(o); } } &amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; var start = new Date().getTime(); var bodylist = []; var st = gid(&amp;quot;stat&amp;quot;); var re = gid(&amp;quot;result&amp;quot;); var nv = gid(&amp;quot;navi&amp;quot;); var max = 5; var KC = { enter: 13, left : 37, right: 39, up : 38, down : 40 }; function gid(id){ return document.getElementById(id); } function ignore_case(){ var a = arguments; return &amp;quot;[&amp;quot; &#43; a[0] &#43; a[0].toUpperCase() &#43; &amp;quot;]&amp;quot; } function do_find(v){ if(this.lastquery == v){return} this.lastquery = v; var re = find(v); if(re.length){ pagenavi(re); view(re) } } function key(c){ switch(c){ case KC.enter: mv(1);break; case KC.left : mv(-1);break; case KC.right: mv(1);break; case KC.up : mv(-1);break; case KC.down : mv(1);break; } } function find(v){ var query = v; if(!v){return []} var aimai; if(query){ aimai = query.replace(/[a-z]/g,ignore_case); try{ reg = new RegExp(aimai,&amp;quot;g&amp;quot;); }catch(e){ reg = /(.)/g; } }else{ reg = /(.)/g; } var start = new Date().getTime(); var result = []; for(var i=0;i&amp;lt;data.length;i&#43;&#43;){ var s = bodylist[i]; var res = reg.exec(s); if(!res){continue} var len = res[0].length; var idx = res.index; if(idx != -1){ result.push([i,idx,len]); } } if(result.length){ st.innerHTML = result.length &#43;&amp;quot;件見つかりました。&amp;quot;; } var end = new Date().getTime(); console.log(&amp;quot;Find:&amp;quot;&#43; (end-start) &#43; &amp;quot; ms&amp;quot;); return result; } function time2date(time){ if(!this.cache){this.cache = {}}; if(this.cache[time]) return this.cache[time]; var d = new Date(time*1000); this.cache[time] = d.formatTime(&amp;quot;yyyy年mm月dd日&amp;quot;); return this.cache[time]; } function snippet(body,idx,len){ var start = idx - 20; return [ body.substring(start,idx), ,&amp;quot;&amp;lt;b&amp;gt;&amp;quot; ,body.substr(idx,len) ,&amp;quot;&amp;lt;/b&amp;gt;&amp;quot; ,body.substr(idx&#43;len,50), ].join(&amp;quot;&amp;quot;); } function pagenavi(result){ var len = result.length; var ct = Math.ceil(len/max); var buf = []; for(var i=0;i&amp;lt;ct;i&#43;&#43;){ buf.push( &amp;quot;&amp;lt;span onclick=&#39;view(\&amp;quot;\&amp;quot;,&amp;quot; ,i&#43;1 ,&amp;quot;);sw(&amp;quot;,i,&amp;quot;)&#39;&amp;gt;&amp;quot; ,i&#43;1 ,&amp;quot;&amp;lt;/span&amp;gt;&amp;quot; ); } nv.innerHTML = buf.join(&amp;quot;&amp;quot;); sw(0); } function sw(t){ var span = nv.getElementsByTagName(&amp;quot;span&amp;quot;); for(var i=0;i&amp;lt;span.length;i&#43;&#43;){ span[i].className = (i==t)?&amp;quot;selected&amp;quot;:&amp;quot;&amp;quot;; } } function mv(to){ var span = nv.getElementsByTagName(&amp;quot;span&amp;quot;); var current; if(!span.length){return} for(var i=0;i&amp;lt;span.length;i&#43;&#43;){ if(span[i].className == &amp;quot;selected&amp;quot;){ current = i;break; } } var moveto = current&#43;to; if(moveto &amp;lt; 0){return} if(moveto &amp;gt; span.length-1){moveto=0} sw(moveto); view(&amp;quot;&amp;quot;,moveto&#43;1) } function view(result,offset){ if(!offset){offset = 1} if(!result){ result = this.last.reverse(); }else{ this.last = result; } var r = result.reverse(); var buf = [&amp;quot;&amp;lt;dl&amp;gt;&amp;quot;]; var count = 0; for(var i=(offset-1)*max;i&amp;lt;r.length;i&#43;&#43;){ count&#43;&#43;; if(count &amp;gt; max){break} var num = r[i][0]; var idx = r[i][1]; var len = r[i][2]; with(data[num]){ buf.push( &amp;quot;&amp;lt;dt&amp;gt;&amp;lt;a href=&#39;&amp;quot;,url,&amp;quot;&#39;&amp;gt;&amp;quot; ,title||&amp;quot;無題&amp;quot;,&amp;quot;&amp;lt;/a&amp;gt;&amp;quot; ,&amp;quot;&amp;lt;dd&amp;gt;&amp;quot; ,snippet(bodylist[num],idx,len) ); } } re.innerHTML = buf.join(&amp;quot;&amp;quot;); } for(var i=0;i&amp;lt;data.length;i&#43;&#43;){ bodylist.push(data[i].title&#43; &amp;quot; &amp;quot; &#43;data[i].content); } var bodyidx = bodylist.join(&amp;quot;&amp;lt;&amp;gt;&amp;quot;); var end = new Date().getTime(); console.log(&amp;quot;Index:&amp;quot;&#43; (end-start) &#43; &amp;quot; ms&amp;quot;); &amp;lt;/script&amp;gt; &amp;lt;noscript&amp;gt;&amp;lt;p class=&amp;quot;notice&amp;quot;&amp;gt;注意: この検索機能は JavaScript を使用しています。&amp;lt;/p&amp;gt;&amp;lt;/noscript&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; {{ partial &amp;quot;footer.html&amp;quot; . }} 検索ページの作成 $ hugo new pages/search.md --- date: 2019-08-28T22:01:57&#43;09:00 type: &amp;quot;search&amp;quot; url: &amp;quot;search&amp;quot; title: &amp;quot;全文検索&amp;quot; --- config.toml追記 [[menu.header]] name = &amp;quot;search&amp;quot; weight = 30 url = &amp;quot;/search&amp;quot;]"
}
,{
url: "https://icck.github.io/posts/000/",
title: "Hugoブログ更新方法",
content: "[Hugoの使い方を今後のブログ更新のために Hugoでブログを書いていく上で、運用方法をメモしていこうと思います。 インストール等は気が向いたときに Local環境を起動 $ hugo server --theme=hugo-theme-nix --buildDrafts --watch 記事の作成 $ hugo new post/test.md --- title: &amp;quot;test&amp;quot; date: 2019-08-26T01:14:23&#43;09:00 draft: true --- title:記事のタイトルに修正 date:作成時刻のため、そのまま draft:trueが非公開。falseに変更し公開 Sample --- title: &amp;quot;test&amp;quot; date: 2019-08-26T01:14:23&#43;09:00 draft: false --- ## ここにマークダウンで本文を記載 githubへpush ./deploy.sh]"
}
,{
url: "https://icck.github.io/posts/",
title: "Posts",
content: "[]"
}]